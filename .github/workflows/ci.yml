name: CI

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]

jobs:
  lint-and-format:
    name: Lint and Format Check
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.13'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          uv pip install --system ruff

      - name: Run ruff check
        run: |
          ruff check src/ tests/

      - name: Run ruff format check
        run: |
          ruff format --check src/ tests/

  type-check:
    name: Type Checking
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.13'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          uv sync

      - name: Run type checker
        run: |
          uv run ty check src/cataphract/
        continue-on-error: true

  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.13'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y sqlite3

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          uv sync

      - name: Run database migrations
        run: |
          uv run alembic upgrade head

      - name: Run tests with coverage
        run: |
          uv run pytest tests/ -v \
            --cov=src/cataphract \
            --cov-report=term-missing \
            --cov-report=xml

      - name: Check coverage threshold
        run: |
          uv run coverage report --fail-under=80

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
        continue-on-error: true

  build-docker:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/Dockerfile
          push: false
          tags: cataphract:ci-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  all-checks-passed:
    name: All Checks Passed
    runs-on: ubuntu-latest
    needs: [lint-and-format, type-check, test, build-docker]
    if: always()

    steps:
      - name: Check status
        run: |
          if [ "${{ needs.lint-and-format.result }}" != "success" ] || \
             [ "${{ needs.test.result }}" != "success" ] || \
             [ "${{ needs.build-docker.result }}" != "success" ]; then
            echo "One or more required checks failed"
            exit 1
          fi
          echo "All required checks passed!"
